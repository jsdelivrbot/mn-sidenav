{"version":3,"sources":["scripts/mn-sidenav.class.js"],"names":["MnSidenav","self","_this","_ret","_classCallCheck","this","setOpenEvents","setCloseEvents","_possibleConstructorReturn","buttons","document","querySelectorAll","id","open","Array","from","forEach","button","addEventListener","close","body","esc","event","keyCode","isOpened","classList","contains","sidenav","querySelector","remove","target","getAttribute","add","stopPropagation","clickButtonClose","clickOutside","tagName","HTMLElement","customElements","define"],"mappings":"sxCAAMA,UAAAA,SAAAA,cACJ,QAAAA,WAAYC,MAAM,GAAAC,OAAAC,IAIhB,OAJgBC,iBAAAC,KAAAL,WAChBC,KAAAA,MAAAA,2BAAAA,MAAAA,UAAAA,WAAAA,OAAAA,eAAAA,YAAAA,KAAAA,KAAaA,OACbC,MAAKI,gBACLJ,MAAKK,iBACLJ,KAAOF,KAAPO,2BAAAN,MAAAC,6GAIA,GAAMM,SAAUC,SAASC,iBAAT,wBAAkDN,KAAKO,GAAvD,MACVC,KAAOR,KAAKQ,IAClBC,OACGC,KAAKN,SACLO,QAAQ,SAAAC,QAAA,MAAUA,QAAOC,iBAAiB,QAASL,iDAItD,GAAMM,OAAQd,KAAKc,MACbV,QAAUC,SAASC,iBAAiB,wBAC1CG,OACGC,KAAKN,SACLO,QAAQ,SAAAC,QAAA,MAAUA,QAAOC,iBAAiB,QAASC,SACtDT,SAASU,KAAKF,iBAAiB,QAASC,OACxCT,SAASQ,iBAAiB,QAAS,WACjC,GAAMG,KAAwB,KAAlBC,MAAMC,QACdC,SAAWd,SAASU,KAAKK,UAAUC,SAAS,qBAChD,IAAIL,KAAOG,SAAU,CACnB,GAAMG,SAAUjB,SAASkB,cAAc,qBACvClB,UAASU,KAAKK,UAAUI,OAAO,sBAC/BF,QAAQF,UAAUI,OAAO,2CAK1BP,OACH,GAAMV,IAAKU,MACPA,MAAMQ,OAAOC,aAAa,gBAC1B1B,KAAKO,GAEHe,QAAUjB,SAASkB,cAAT,cAAqChB,GACrDe,SAAQF,UAAUO,IAAI,WACtBtB,SAASU,KAAKK,UAAUO,IAAI,oDAGxBV,OACJ,GAAIA,MAAO,CACTA,MAAMW,iBACN,IAAMC,kBAAmBZ,MAAMQ,OAAOC,aAAa,iBAC7CI,aAAwC,SAAzBb,MAAMQ,OAAOM,QAC5BT,QAAUjB,SAASkB,cAAc,uBAElCM,kBAAoBC,eAAiBR,UACxCjB,SAASU,KAAKK,UAAUI,OAAO,sBAC/BF,QAAQF,UAAUI,OAAO,gBAG3BnB,UAASU,KAAKK,UAAUI,OAAO,sBAC/BxB,KAAKoB,UAAUI,OAAO,0BAzDJQ,YA8DxBC,gBAAeC,OAAO,aAAcvC","file":"mn-sidenav.js","sourcesContent":["class MnSidenav extends HTMLElement {\n  constructor(self) {\n    self = super(self)\n    this.setOpenEvents()\n    this.setCloseEvents()\n    return self\n  }\n\n  setOpenEvents() {\n    const buttons = document.querySelectorAll(`button[open-sidenav=\"${this.id}\"]`)\n    const open = this.open\n    Array\n      .from(buttons)\n      .forEach(button => button.addEventListener('click', open))\n  }\n\n  setCloseEvents() {\n    const close = this.close\n    const buttons = document.querySelectorAll('button[close-sidenav]')\n    Array\n      .from(buttons)\n      .forEach(button => button.addEventListener('click', close))\n    document.body.addEventListener('click', close)\n    document.addEventListener('keyup', () => {\n      const esc = event.keyCode === 27\n      let isOpened = document.body.classList.contains('mn-sidenav-visible')\n      if (esc && isOpened) {\n        const sidenav = document.querySelector('mn-sidenav.visible')\n        document.body.classList.remove('mn-sidenav-visible')\n        sidenav.classList.remove('visible')\n      }\n    })\n  }\n\n  open(event) {\n    const id = event\n      ? event.target.getAttribute('open-sidenav')\n      : this.id\n\n    const sidenav = document.querySelector(`mn-sidenav#${id}`)\n    sidenav.classList.add('visible')\n    document.body.classList.add('mn-sidenav-visible')\n  }\n\n  close(event) {\n    if (event) {\n      event.stopPropagation()\n      const clickButtonClose = event.target.getAttribute('close-sidenav')\n      const clickOutside = event.target.tagName === 'BODY'\n      const sidenav = document.querySelector('mn-sidenav.visible')\n\n      if ((clickButtonClose || clickOutside) && sidenav) {\n        document.body.classList.remove('mn-sidenav-visible')\n        sidenav.classList.remove('visible')\n      }\n    } else {\n      document.body.classList.remove('mn-sidenav-visible')\n      this.classList.remove('visible')\n    }\n  }\n}\n\ncustomElements.define('mn-sidenav', MnSidenav)\n"]}